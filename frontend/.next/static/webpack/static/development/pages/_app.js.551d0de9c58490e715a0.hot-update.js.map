{"version":3,"file":"static/webpack/static/development/pages/_app.js.551d0de9c58490e715a0.hot-update.js","sources":["webpack:///./lib/withData.js"],"sourcesContent":["import withApollo from \"next-with-apollo\";\n// next with apollo gives an HOC that exposes apllo client as a prop\nimport ApolloClient from \"apollo-boost\";\nimport { endpoint } from \"../config\";\nimport { LOCAL_STATE_QUERY } from \"../components/Cart\";\n\nfunction createClient({ headers }) {\n  return new ApolloClient({\n    uri: process.env.NODE_ENV === \"development\" ? endpoint : endpoint,\n    request: operation => {\n      operation.setContext({\n        fetchOptions: {\n          credentials: \"include\"\n        },\n        headers\n      });\n    },\n    // local data\n    clientState: {\n      resolvers: {\n        // resolver for togglecart in Cart.js\n        Mutation: {\n          // we destructure cache from apollo client\n          toggleCart(_root, variables, { cache }) {\n            // read the cartOpen value from the cache\n            const { cartOpen } = cache.readQuery({\n              query: LOCAL_STATE_QUERY\n            });\n            // write the cart state to the opposite\n            const data = {\n              data: { cartOpen: !cartOpen }\n            };\n            cache.writeData(data);\n            return data;\n          }\n        }\n      },\n      defaults: {\n        cartOpen: true\n      }\n    }\n  });\n}\n\nexport default withApollo(createClient);\n"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AADA;AAGA;AADA;AAFA;AACA;AACA;AAIA;AACA;AAAA;AAAA;AADA;AAGA;AACA;AACA;AAbA;AAFA;AAkBA;AACA;AADA;AAnBA;AAXA;AAmCA;AACA;AACA;;;;A","sourceRoot":""}
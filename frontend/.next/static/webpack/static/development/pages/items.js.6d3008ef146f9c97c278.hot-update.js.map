{"version":3,"file":"static/webpack/static/development/pages/items.js.6d3008ef146f9c97c278.hot-update.js","sources":["webpack:///./components/Items.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport { Query } from \"react-apollo\";\nimport gql from \"graphql-tag\";\nimport styled from \"styled-components\";\nimport Pagination from \"./Pagination\";\n\nimport Item from \"./Item\";\n\nexport const ALL_ITEMS_QUERY = gql`\n  query ALL_ITEMS_QUERY {\n    items {\n      id\n      title\n      price\n      description\n      image\n      largeImage\n    }\n  }\n`;\n\nconst Center = styled.div`\n  text-align: center;\n`;\n\nconst ItemsList = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  grid-gap: 60px;\n  max-width: ${props =>\n    props.theme\n      .maxWidth}; /* get width from higher order component => Page.js */\n  margin: 0 auto;\n`;\n\nexport default class Items extends Component {\n  render() {\n    return (\n      <Center>\n        {/* the page prop comes from the index.js page */}\n        <Pagination page={this.props.page} />\n        <Query query={ALL_ITEMS_QUERY}>\n          {({ data, error, loading }) => {\n            if (loading) return <p>Loading...</p>;\n            if (error) return <p>Error: {error.message}</p>;\n            return (\n              <ItemsList>\n                {data.items.map(item => (\n                  <Item item={item} key={item.id} />\n                ))}\n              </ItemsList>\n            );\n          }}\n        </Query>\n        <Pagination page={this.props.page} />\n      </Center>\n    );\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAaA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAIA;AAAA;AACA;AAKA;;;;;;;;;;;;;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAKA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;AAtBA;AACA;;;;;A","sourceRoot":""}
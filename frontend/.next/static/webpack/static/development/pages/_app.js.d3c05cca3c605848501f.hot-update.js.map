{"version":3,"file":"static/webpack/static/development/pages/_app.js.d3c05cca3c605848501f.hot-update.js","sources":["webpack:///./components/Cart.js","webpack:///./components/TakeMyMoney.js"],"sourcesContent":["import React from 'react';\r\nimport { Query, Mutation } from 'react-apollo';\r\nimport { adopt } from 'react-adopt'; // used to deal with render props issues\r\nimport gql from 'graphql-tag';\r\nimport User from './User';\r\nimport CartStyles from './styles/CartStyles';\r\nimport Supreme from './styles/Supreme';\r\nimport CloseButton from './styles/CloseButton';\r\nimport SickButton from './styles/SickButton';\r\nimport CartItem from './CartItem';\r\nimport calcTotalPrice from '../lib/calcTotalPrice';\r\nimport formatMoney from '../lib/formatMoney';\r\nimport TakeMyMoney from './TakeMyMoney';\r\n\r\nconst LOCAL_STATE_QUERY = gql`\r\n\tquery {\r\n\t\tcartOpen @client # this way, we are telling graphql to grab data from the apollo store and not the server\r\n\t}\r\n`;\r\n\r\nconst TOGGLE_CART_MUTATION = gql`\r\n\tmutation {\r\n\t\ttoggleCart @client\r\n\t}\r\n`;\r\n\r\n/* eslint-disable */\r\nconst Composed = adopt({\r\n\t// we could easily return just <User />, <Mutation />, <Query /> as the value, but we want to circumvent the proptype error\r\n\tuser: ({ render }) => <User>{render}</User>,\r\n\ttoggleCart: ({ render }) => <Mutation mutation={TOGGLE_CART_MUTATION}>{render}</Mutation>,\r\n\tlocalState: ({ render }) => <Query query={LOCAL_STATE_QUERY}>{render}</Query>\r\n});\r\n/* eslint-enable */\r\n\r\n// * Since we passed the result of the current user query to its potential children, we can access them here\r\n\r\nconst Cart = () => (\r\n\t<Composed>\r\n\t\t{({ user, toggleCart, localState, loading }) => {\r\n\t\t\tconst me = user.data.me;\r\n\t\t\tif (!me) return null;\r\n\t\t\treturn (\r\n\t\t\t\t<div>\r\n\t\t\t\t\t{loading ? (\r\n\t\t\t\t\t\t<p>Loading data</p>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<CartStyles open={localState.data.cartOpen}>\r\n\t\t\t\t\t\t\t{/* we are able to toggle the cart on the apollo state from here */}\r\n\t\t\t\t\t\t\t<header>\r\n\t\t\t\t\t\t\t\t<CloseButton title=\"close\" onClick={toggleCart}>\r\n\t\t\t\t\t\t\t\t\t&times;\r\n\t\t\t\t\t\t\t\t</CloseButton>\r\n\t\t\t\t\t\t\t\t<Supreme>{me.name}'s Cart</Supreme>\r\n\t\t\t\t\t\t\t\t<p>You have {me.cart.length} Item(s) in your cart.</p>\r\n\t\t\t\t\t\t\t</header>\r\n\t\t\t\t\t\t\t<ul>{me.cart.map((cartItem) => <CartItem key={cartItem.id} cartItem={cartItem} />)}</ul>\r\n\t\t\t\t\t\t\t<footer>\r\n\t\t\t\t\t\t\t\t<p>{formatMoney(calcTotalPrice(me.cart))}</p>\r\n\t\t\t\t\t\t\t\t{me.cart.length && (\r\n\t\t\t\t\t\t\t\t\t<TakeMyMoney>\r\n\t\t\t\t\t\t\t\t\t\t<SickButton>Checkout</SickButton>\r\n\t\t\t\t\t\t\t\t\t</TakeMyMoney>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</footer>\r\n\t\t\t\t\t\t</CartStyles>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t}}\r\n\t</Composed>\r\n);\r\n\r\nexport default Cart;\r\nexport { LOCAL_STATE_QUERY, TOGGLE_CART_MUTATION };\r\n","import React from 'react';\nimport StripeCheckout from 'react-stripe-checkout';\nimport { Mutation } from 'react-apollo';\nimport Router from 'next/router';\nimport NProgress from 'nprogress';\nimport PropTypes from 'prop-types';\nimport gql from 'graphql-tag';\nimport calcTotalPrice from '../lib/calcTotalPrice';\nimport Error from './ErrorMessage';\nimport User, { CURRENT_USER_QUERY } from './User';\n\nconst CREATE_ORDER_MUTATION = gql`\n\tmutation createOrder($token: String!) {\n\t\tcreateOrder(token: $token) {\n\t\t\tid\n\t\t\tcharge\n\t\t\ttotal\n\t\t\titems {\n\t\t\t\tid\n\t\t\t\ttitle\n\t\t\t}\n\t\t}\n\t}\n`;\n\nfunction totalItems(cart) {\n\treturn cart.reduce((tally, cartItem) => tally + cartItem.quantity, 0);\n}\n\nclass TakeMyMoney extends React.Component {\n\tonToken = async (res, createOrder) => {\n\t\tconsole.log(res);\n\t\t// manually call the mutation once we have the stripe token\n\t\tconst order = await createOrder({\n\t\t\tvariables: {\n\t\t\t\ttoken: res.id\n\t\t\t}\n\t\t}).catch((err) => {\n\t\t\talert(err.message);\n\t\t});\n\t\tconsole.log(order);\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<User>\n\t\t\t\t{({ data: { me } }) => (\n\t\t\t\t\t<Mutation mutation={CREATE_ORDER_MUTATION} refetchQueries={[ { query: CURRENT_USER_QUERY } ]}>\n\t\t\t\t\t\t{(createOrder) => (\n\t\t\t\t\t\t\t<StripeCheckout\n\t\t\t\t\t\t\t\tamount={calcTotalPrice(me.cart)}\n\t\t\t\t\t\t\t\tname=\"Sick fits\"\n\t\t\t\t\t\t\t\tdescription={`Order of ${totalItems(me.cart)} items`}\n\t\t\t\t\t\t\t\timage={me.cart.length && me.cart[0].item && me.cart[0].item.image}\n\t\t\t\t\t\t\t\tstripeKey=\"pk_test_OYcxbRfik3MKtgwlmdMnqqfe\"\n\t\t\t\t\t\t\t\tcurrency=\"USD\"\n\t\t\t\t\t\t\t\temail={me.email}\n\t\t\t\t\t\t\t\ttoken={(res) => this.onToken(res, createOrder)}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{this.props.children}\n\t\t\t\t\t\t\t</StripeCheckout>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Mutation>\n\t\t\t\t)}\n\t\t\t</User>\n\t\t);\n\t}\n}\n\nexport default TakeMyMoney;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAMA;AAMA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJA;AAMA;AAEA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAhCA;AACA;AAmCA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAaA;AACA;AAAA;AAAA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAIA;AACA;AADA;AADA;AAKA;AACA;AACA;AAVA;AAGA;AAOA;AACA;AAXA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;AAYA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAFA;AAoBA;;;;AArCA;AACA;AAuCA;;;;A","sourceRoot":""}